#=================================================
# Source form P3TERX
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
#=================================================
# OpenWrt source code from Lean's OpeWrt https://github.com/coolsnowwolf/lede
# 添加luci应用：
# 应用限制 OpenAppFilter https://github.com/destan19/OpenAppFilter
# 微信推送 https://github.com/tty228/luci-app-serverchan
# luci概况天气 https://github.com/openwrtcompileshell/OpenwrtCompileScript
# 去广告模块koolproxyR https://github.com/Leo-Jo/luci-app-koolproxyR（已无法链接）
#=================================================

name: 编译Neiwifi_D2的OpenWrt固件

on:
  release:
    types: published
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: 搭建编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: 同步源码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update and install feeds
      run: |
       cd openwrt
       sed -i '5s/#src-git/src-git/g' feeds.conf.default
       ./scripts/feeds update -a
       ./scripts/feeds install -a

    - name: 应用限制/微信推送
      run: |
       cd openwrt/package
       git clone https://github.com/destan19/OpenAppFilter
       git clone https://github.com/tty228/luci-app-serverchan
      
    - name: 我的主题
      run: |
       cd openwrt/package/lean
       git clone https://github.com/HDragon8/luci-theme-noodles
       git clone https://github.com/HDragon8/luci-theme-argon-noodles
       git clone https://github.com/HDragon8/luci-theme-noodlesPurple 
      
#    - name: index添加天气
#      run: cd openwrt && git clone https://github.com/HDragon8/noodlesindex      

    - name: 加载自定义设置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: SSH connection to Actions
      uses: HDragon8/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: 上传bin文件夹
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: 列出文件名
      run: cd openwrt/bin/targets/ramips/mt7621 && ls

    - name: 压缩文件包
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: 上传固件
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: 固件上传到release
      uses: softprops/action-gh-release@v1
      if: env.UPLOAD_RELEASE == 'true' && startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.noodles_RELEASE_TOKEN }}
      with:
        files: ${{ env.FIRMWARE }}/*

